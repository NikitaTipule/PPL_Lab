   0x000000000000066a <+0>:	push   %rbp
   0x000000000000066b <+1>:	mov    %rsp,%rbp
   0x000000000000066e <+4>:	sub    $0x20,%rsp
   0x0000000000000672 <+8>:	mov    %fs:0x28,%rax
   0x000000000000067b <+17>:	mov    %rax,-0x8(%rbp)
   0x000000000000067f <+21>:	xor    %eax,%eax
   0x0000000000000681 <+23>:	movl   $0x1,-0x20(%rbp)
   0x0000000000000688 <+30>:	movl   $0x2,-0x1c(%rbp)
   0x000000000000068f <+37>:	movl   $0x3,-0x18(%rbp)
   0x0000000000000696 <+44>:	movl   $0x4,-0x14(%rbp)
   0x000000000000069d <+51>:	movl   $0x5,-0x10(%rbp)
   0x00000000000006a4 <+58>:	mov    $0x0,%eax
   0x00000000000006a9 <+63>:	mov    -0x8(%rbp),%rdx
   0x00000000000006ad <+67>:	xor    %fs:0x28,%rdx
   0x00000000000006b6 <+76>:	je     0x6bd <main+83>
   0x00000000000006b8 <+78>:	callq  0x540 <__stack_chk_fail@plt>
   0x00000000000006bd <+83>:	leaveq 
   0x00000000000006be <+84>:	retq 
